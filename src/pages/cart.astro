---
import Layout from "../layouts/Layout.astro"
import { supabase } from '../lib/supabase';
import DeleteBtn from "../components/DeleteBtn.astro";
import Icon from "~/components/Icon.astro";

let user_id
let is_User;
let items;
const {data, error} = await supabase.auth.getUser();
if(error !== null){
    user_id = "";
    is_User = 0;
    console.log('Not logged in', user_id);
}
if(data.user !== null){
    user_id = data.user.id;
    is_User = 1;
    console.log('Logged in', user_id);
}

if(is_User === 1){
    const games = await supabase.from('cart').select().eq('user_id', user_id).order('id', { ascending: true });
    // console.log(games.error)
    items = games.data;
}

if(is_User === 0){
    const games = await supabase.from('cart').select().eq('is_User', is_User).order('id', { ascending: true });
    // console.log(games.error)
    items = games.data;
}

let counter = 0;
let price = 0;
let fullPrice;
for (let obj of items) {
    counter += obj.quantity;
    price += obj.price * obj.quantity;
    fullPrice = price.toFixed(2);
}
if(counter === 0){
    fullPrice = '0.00'
}
---
<Layout title="GameShack - Cart">
    <div class="h-56 lg:w-72 w-56 lg:h-72 hidden fixed bg-[#00ADB5] rounded-full -z-50 opacity-30 lg:top-0 top-4 -left-8" transition:name="blobA"></div>
		<div class="h-56 lg:w-72 w-56 lg:h-72 hidden fixed bg-[#00ADB5] rounded-full -z-50 opacity-30 lg:-bottom-10 lg:-right-10 -bottom-8 -right-8" transition:name="blobB"></div>
    <section class="mx-4 block mt-24 lg:hidden">
        <div class="flex justify-between">
            <h1>Cart</h1>
            <h1>({counter} items)</h1>
        </div>
        <hr class="h-px mt-2 mb-8 bg-black border-0 dark:bg-gray-700">
        {items.map((game) => (
            <div class="flex bg-gray p-4 mb-2 rounded-3xl" transition:name={`record-${game.id}`}>
                <div class="w-28 h-28 md:w-48 md:h-48 rounded-lg overflow-hidden">
                    <img src={game.image} alt={`${game.title} - cover`}
                    class="object-cover rounded-lg">
                </div>
                <div class="flex justify-between items-center w-full">
                    <div class="h-full justify-between flex flex-col mx-4">
                        <div class="flex flex-col gap-4">
                            <p class="font-semibold">{game.title}</p>
                            <p class="mb-4">&euro; {game.price}</p>
                        </div>
                        <div class="flex justify-center rounded-lg bg-white ease-in-out transition-all duration-200
                        hover:text-red hover:font-semibold">
                            <DeleteBtn id={game.id} />
                        </div>
                    </div>
                    <p class="md:mx-8">x{game.quantity}</p>
                </div>

            </div>
        ))}

        <div class="justify-center flex">
            <hr class="h-px w-4/5 mt-2 mb-4 bg-black/25 border-0 dark:bg-gray-700">
        </div>
    </section>
    <section class="flex justify-center mb-10 lg:hidden">
        <div class="w-4/5 flex justify-between px-4">
            <p>total price:</p>
            <p>&euro; {fullPrice}</p>
        </div>
    </section>
    
    <section class="hidden lg:grid grid-cols-3 gap-4">
        <div class="col-span-2 mx-4 pt-24">
            <div class="flex justify-between">        
                <h1>Cart</h1>
                <h1>({counter} items)</h1>
            </div>
            <hr class="h-px mt-2 mb-8 bg-black border-0 dark:bg-gray-700">
            <section>
                {items.map((game) => (
                    <div class="flex bg-gray p-4 mb-2 rounded-3xl" transition:name={`record-${game.id}`}>
                        <div class="w-28 h-28 md:w-48 md:h-48 rounded-lg overflow-hidden">
                            <img src={game.image} alt={`${game.title} - cover`}
                            class="object-cover h-full w-full rounded-lg">
                        </div>
                        <div class="flex justify-between items-center w-full">
                            <div class="h-full justify-between flex flex-col mx-4">
                                <div class="flex flex-col gap-4">
                                    <h2 class="font-semibold">{game.title}</h2>
                                    <h3 class="mb-4">&euro; {game.price}</h3>
                                </div>
                                <div class="flex justify-end md:justify-start">
                                    <div class="flex items-center gap-2 rounded-lg bg-white easse-in-out transition duration-300
                                    hover:text-red hover:font-semibold">
                                        <DeleteBtn id={game.id} />
                                    </div>
                                </div>
                            </div>
                            <h3 class="md:mx-8">x{game.quantity}</h3>
                        </div>
                    </div>
                ))}
            </section>
        </div>
        <div class="min-h-screen w-full bg-gray pt-24 px-4">
            <h1>Summary</h1>
            <hr class="h-px mt-2 mb-8 bg-black border-0">
            {
                items.map((game) => (
                    <div class="grid grid-cols-4 gap-2">
                        <p class="col-span-2">{game.title}</p>
                        <p class="text-center">{game.price}</p>
                        <p class="text-right">x{game.quantity}</p>
                    </div>
                ))
            }
            <div class="flex justify-center">
                <hr class="h-px w-4/5 my-8 bg-black/25 border-0">
            </div>
            <div class="flex justify-between">
                <p>Total price:</p>
                <p>&euro; {fullPrice}</p>
            </div>
            
        </div>
    </section>
</Layout>